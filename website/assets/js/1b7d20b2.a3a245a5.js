"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8313],{8778:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"github-action","title":"Copa Github Action","description":"Overview","source":"@site/versioned_docs/version-v0.4.x/github-action.md","sourceDirName":".","slug":"/github-action","permalink":"/copacetic/website/v0.4.x/github-action","draft":false,"unlisted":false,"tags":[],"version":"v0.4.x","frontMatter":{"title":"Copa Github Action"},"sidebar":"sidebar","previous":{"title":"Code of Conduct","permalink":"/copacetic/website/v0.4.x/code-of-conduct"},"next":{"title":"Release Process","permalink":"/copacetic/website/v0.4.x/release"}}');var o=t(4848),c=t(8453);const s={title:"Copa Github Action"},r=void 0,a={},d=[{value:"Overview",id:"overview",level:2},{value:"Inputs",id:"inputs",level:2},{value:"<code>image</code>",id:"image",level:2},{value:"<code>image-report</code>",id:"image-report",level:2},{value:"<code>patched-tag</code>",id:"patched-tag",level:2},{value:"<code>buildkit-version</code>",id:"buildkit-version",level:2},{value:"<code>copa-version</code>",id:"copa-version",level:2},{value:"Output",id:"output",level:2},{value:"<code>patched-image</code>",id:"patched-image",level:2},{value:"Example Workflow",id:"example-workflow",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://github.com/project-copacetic/copa-action",children:"Copa Github Action"})," allows you patch vulnerable containers in your workflows using Copa."]}),"\n",(0,o.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,o.jsx)(n.h2,{id:"image",children:(0,o.jsx)(n.code,{children:"image"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Required"})," The image reference to patch."]}),"\n",(0,o.jsx)(n.h2,{id:"image-report",children:(0,o.jsx)(n.code,{children:"image-report"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Required"})," The trivy json vulnerability report of the image to patch."]}),"\n",(0,o.jsx)(n.h2,{id:"patched-tag",children:(0,o.jsx)(n.code,{children:"patched-tag"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Required"})," The new patched image tag."]}),"\n",(0,o.jsx)(n.h2,{id:"buildkit-version",children:(0,o.jsx)(n.code,{children:"buildkit-version"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," The buildkit version used in the action, default is latest."]}),"\n",(0,o.jsx)(n.h2,{id:"copa-version",children:(0,o.jsx)(n.code,{children:"copa-version"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," The Copa version used in the action, default is latest."]}),"\n",(0,o.jsx)(n.h2,{id:"output",children:"Output"}),"\n",(0,o.jsx)(n.h2,{id:"patched-image",children:(0,o.jsx)(n.code,{children:"patched-image"})}),"\n",(0,o.jsx)(n.p,{children:"Image reference of the resulting patched image."}),"\n",(0,o.jsx)(n.h2,{id:"example-workflow",children:"Example Workflow"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"on: [push]\n\njobs:\n    test:\n        runs-on: ubuntu-latest\n\n        strategy:\n          fail-fast: false\n          matrix:\n            # provide relevant list of images to scan on each run\n            images: ['docker.io/library/nginx:1.21.6', 'docker.io/openpolicyagent/opa:0.46.0', 'docker.io/library/hello-world:latest']\n\n        steps:\n        - name: Set up Docker Buildx\n          uses: docker/setup-buildx-action@dedd61cf5d839122591f5027c89bf3ad27691d18\n\n        - name: Generate Trivy Report\n          uses: aquasecurity/trivy-action@69cbbc0cbbf6a2b0bab8dcf0e9f2d7ead08e87e4\n          with:\n            scan-type: 'image'\n            format: 'json'\n            output: 'report.json'\n            ignore-unfixed: true\n            vuln-type: 'os'\n            image-ref: ${{ matrix.images }}\n\n        - name: Check Vuln Count\n          id: vuln_count\n          run: |\n            report_file=\"report.json\"\n            vuln_count=$(jq '.Results | length' \"$report_file\")\n            echo \"vuln_count=$vuln_count\" >> $GITHUB_OUTPUT\n\n        - name: Copa Action\n          if: steps.vuln_count.outputs.vuln_count != '0'\n          id: copa\n          uses: project-copacetic/copa-action@v1\n          with:\n            image: ${{ matrix.images }}\n            image-report: 'report.json'\n            patched-tag: 'patched'\n            buildkit-version: 'v0.11.6'\n            # optional, default is latest\n            copa-version: '0.4.1'\n\n        - name: Login to Docker Hub\n          if: steps.copa.conclusion == 'success'\n          id: login\n          uses: docker/login-action@b4bedf8053341df3b5a9f9e0f2cf4e79e27360c6\n          with:\n            username: 'user'\n            password: ${{ secrets.DOCKERHUB_TOKEN }}\n\n        - name: Docker Push Patched Image\n          if: steps.login.conclusion == 'success'\n          run: |\n            docker push ${{ steps.copa.outputs.patched-image }}\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const o={},c=i.createContext(o);function s(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);